@model Kclinic.Models.ViewModels.ShoppingCartVM

<div class="container">
	<form method="post">
		<br />
		<div class="container">
			<div class="card">
				<div class="card-header bg-dark text-light ml-0">
					<div class="row">
						<div class="col-6  pt-2">
							<i class="fa fa-shopping-cart"></i> &nbsp;
							Giỏ hàng
						</div>
						<div class="col-6 text-end">
							<a asp-area="Customer" asp-controller="Home" asp-action="Index" class="btn btn-outline-info btn-sm">Tiếp tục mua sắm</a>
						</div>
					</div>
				</div>

				<div class="card-body">
					@foreach(var item in Model.ListCart){
					<div class="row">
						<div class="d-none d-lg-block col-lg-1 text-center py-2">
								<img src="@item.Product.ImageUrl" class="img-responsive" alt="" style="max-width: auto; max-height: 100px;">
						</div>
						<div class="col-12 col-lg-6 pt-md-3">
							<h5><strong>@item.Product.Name</strong></h5>
						</div>

						<div class="col-xs-12 col-lg-5 row">
							<div class="col-xs-4 text-right pt-4">
								<h6>
										<strong>@item.Price.ToString("") <span class="text-muted">&nbsp;x&nbsp;</span>@item.Count</strong>
								</h6>
							</div>
							<div class="col-6 col-sm-4 col-lg-6 pt-2">
								<div class="w-75 btn-group" role="group">
										<a asp-action="plus" asp-route-cartId="@item.Id" class="btn btn-primary">
										<i class="bi bi-plus-square"></i>
									</a> &nbsp;
										<a asp-action="minus" asp-route-cartId="@item.Id" class="btn btn-warning">
										<i class="bi bi-dash-square"></i>
									</a>
								</div>

							</div>
							<div class="col-xs-2 col-sm-4 col-lg-2 text-right pt-2">
									<a asp-action="remove" asp-route-cartId="@item.Id" class="btn btn-danger">
									<i class="bi bi-trash-fill"></i>
								</a>
							</div>
						</div>
						
					</div>
					<hr />
					}
					<div class="row">
						<div class="col-12 col-md-6 offset-md-6 col-lg-4 offset-lg-8 pr-4">
							<ul class="list-group">
								<li class="list-group-item d-flex justify-content-between bg-light">
									<span class="text-info"> Tổng :</span>
									<strong class="text-info" id="orderTotal">@Model.OrderHeader.OrderTotal.ToString("")</strong>
									<strong class="text-info">USD</strong>
										
								</li>
							</ul>
						</div>
					</div>

				</div>

				<div class="card-footer">
					<div class="card-footer row">
						<div class="col-sm-12 col-lg-4 col-md-6 offset-lg-8 offset-md-6 ">
							<a asp-action="Summary" class="btn btn-success form-control">Stripe</a>
							<a asp-action="CoinPayments" class="btn btn-success form-control">Ethereum</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</form>
</div>

<!-- Include the script to fetch the exchange rate -->

<script>
	// Function to fetch the exchange rate and update the token amount
	async function updateTokenAmount() {
		// Fetch the exchange rate from the API
		var exchangeRate = await fetch('https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD')
			.then(response => response.json())
			.then(data => data.USD)
			.catch(error => {
				console.error('Error fetching exchange rate:', error);
				return 0; // Use a default value or handle the error accordingly
			});

		// Calculate the equivalent token amount in ETH based on the exchange rate
		var orderTotalElement = document.getElementById('orderTotal');
		var tokenAmountInUSD = orderTotalElement ? parseFloat(orderTotalElement.innerText) || 0 : 0;
		var tokenAmountInETH = tokenAmountInUSD / exchangeRate;

		// Pass the token amount and exchange rate to the CoinPayments page
		localStorage.setItem('tokenAmountInETH', tokenAmountInETH.toFixed(6));
		localStorage.setItem('exchangeRate', exchangeRate);
	}

	// Initial update when the page loads
	updateTokenAmount();
</script>